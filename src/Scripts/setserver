#!/bin/bash

# setserver - Switch between webservers Apache and NginX
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# This program is free software; you may redistribute it and/or modify it.

# version
THISVERSION=1.0
# name of this
MYNAME=$(basename ${0})
# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo -e "$1"
    fi
}

# display usage information
usage() {
    echo -e "${MYNAME} ${THISVERSION}, written by René Kreijveld.\n"
    echo -e "Usage: ${MYNAME} -n | -a [-s] [-h]\n"
    echo "-n set webserver to NginX."
    echo -e "-a set webserver to Apache.\n"
    echo -e "You must specify either -n or -a.\n"
    echo "The other options are:"
    echo "-s silent, no messages will be shown."
    echo -e "-h display this help.\n"
    exit 0
}

# Parse command line arguments
SILENT="no"
NEWSERVER=""
while getopts "ansh" opt; do
    case ${opt} in
    a)
        NEWSERVER=apache
        ;;
    n)
        NEWSERVER=nginx
        ;;
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        usage
        ;;
    esac
done

showmessage "${MYNAME} ${THISVERSION}"

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    echo "Error: configuration file ${CONFIG_FILE} not found, exiting."
    exit 1
fi  

# check if mandatory parameters are provided
if [ -z "${NEWSERVER}" ]; then
    echo "Error: no -a or -n specified."
    echo "Usage: ${MYNAME} -n | -a [-s] [-h]"
    exit 1
fi

if [ "${NEWSERVER}" == "${WEBSERVER}" ]; then
    showmessage "Webserver is already ${NEWSERVER}, no need to switch."
    exit 0
fi

showmessage "Current server is ${WEBSERVER}, switching to ${NEWSERVER}."

if [ "${NEWSERVER}" == "apache" ]; then
    showmessage "Wait 5 seconds for NginX to stop."
    /usr/local/bin/stopnginx
    sleep 5
    showmessage "Wait 5 seconds for Apache to start."
    /usr/local/bin/startapache
    sleep 5
fi

if [ "${NEWSERVER}" == "nginx" ]; then
    showmessage "Wait 5 seconds for Apache to stop."
    /usr/local/bin/stopapache
    sleep 5
    showmessage "Wait 5 seconds for NginX to start."
    /usr/local/bin/startnginx
    sleep 5
fi

# Update config file
sed -i '' "s|^WEBSERVER=.*|WEBSERVER=${NEWSERVER}|" "$CONFIG_FILE"
