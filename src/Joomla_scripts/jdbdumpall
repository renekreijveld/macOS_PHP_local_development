#!/bin/bash

# jdbdumpall - Create a backup of the MySQL databases
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# Version history
# 1.0 Initial version

# version
VERSION=1.0

# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    echo "Error: configuration file ${CONFIG_FILE} not found, exiting."
    exit 1
fi   

# display messages
SILENT="no"

# determine path of script
MYPATH=$(cd "$(dirname "$0")"; pwd -P)
MYNAME=$(basename "$0")

# check if folder for backup storage exists
if [ ! -d "${MARIADBBACKUP}" ]; then
    echo "Backup directory does not exist!"
    exit 1
fi

# display usage information
usage() {
    echo -e "${MYNAME} ${VERSION}, written by René Kreijveld.\n"
    echo -e "Usage: ${MYNAME} [-s] [-h]\n"
    echo "-s Silent. Do not display any messages to standard output."
    echo -e "-h Help. Display this info.\n"
    exit 0
}

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo -e "$1"
    fi
}

# process the arguments
while getopts sh opt; do
    case "${opt}" in
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 1
        ;;
    esac
done

showmessage "${MYNAME} ${VERSION}"

for DIR in $(find ${ROOTFOLDER} -maxdepth 4 -type d); do
    if [ -f ${DIR}/configuration.php ]; then
        # possible joomla found
        showmessage "Possible Joomla found at ${DIR}."

        cd ${DIR}

        if [ ! -e ${MYPATH}/jfunctions ]; then
            showmessage "Cannot continue: script jfunctions not found, exiting."
            exit 1
        else
            . ${MYPATH}/jfunctions
        fi

        # create backup
        NOW=$(date +"%Y%m%d-%H%M%S")

        # dump the database to a .sql file
        if mariadb-dump --skip-opt --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host=${host} --user=${dbuser} --password=${password} ${database} > ${MARIADBBACKUP}/${database}.${NOW}.sql; then
            showmessage "Database dump created for ${sitenameclean}"
        else
            showmessage "Error creating database dump."
            exit 1
        fi

        showmessage "Database backup for ${sitenameclean} finished."
    fi
done

showmessage "Your database backups are ready in ${MARIADBBACKUP}."