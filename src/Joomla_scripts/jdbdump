#!/bin/bash

# jdbdump -- Dump a Joomla database to SQL file.
# Supports Joomla versions 1.0 - 5.x
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# Version history:
# 1.6 Added use of config file

THISVERSION=1.6

MYPATH=$(cd "$(dirname "$0")"; pwd -P)
MYNAME=$(basename "$0")

# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

SILENT="no"
# Function to show messages (honoring silent mode)
showmessage() {
    if [[ "${SILENT}" == "no" ]]; then
        echo -e "$1"
    fi
}

# Display usage information
usage() {
    echo "${MYNAME} ${THISVERSION}, written by René Kreijveld."
    echo -e "\nUsage: ${MYNAME} [-n <name>] [-t] [-c] [-o] [-h]\n"
    echo "-n the name for the website to make the database dump for."
    echo "-t Add a date-time-stamp to the database dump filename."
    echo "-c Compress the database dump with gzip."
    echo "-o Overwrite existing database dump."
    echo "-h Help. Display this info.\n"
    exit 0
}

# Process the arguments
COMPRESS="no"
SHOWDATE="no"
OVERWRITE="no"
WEBSITE_NAME=""
while getopts n:tcoh opt; do
    case "${opt}" in
    n)
        WEBSITE_NAME=$OPTARG
        ;;
    t)
        SHOWDATE="yes"
        ;;
    c)
        COMPRESS="yes"
        ;;
    o)
        OVERWRITE="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2;
        exit 1
        ;;
    esac
done

showmessage "${MYNAME} ${THISVERSION}"

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    echo "Error: configuration file ${CONFIG_FILE} not found, exiting."
    exit 1
fi   

# Check if WEBSITE_NAME is not empty
if [ ! -z "${WEBSITE_NAME}" ]; then
    WEBSITE_FOLDER=${ROOTFOLDER}/${WEBSITE_NAME}
    if [ ! -d "${WEBSITE_FOLDER}" ]; then
        echo "Error: website folder ${WEBSITE_FOLDER} not found, exiting."
        exit 1
    fi
    showmessage "Going in to website folder ${WEBSITE_FOLDER}."
    cd ${WEBSITE_FOLDER}
fi

# Check if jfunctions script exists
if [[ ! -f "${MYPATH}/jfunctions" ]]; then
    echo "Error: Required script 'jfunctions' not found in ${MYPATH}. Exiting."
    exit 1
else
    # Gather Joomla information
    source "${MYPATH}/jfunctions"
fi

# Add a timestamp if requested
if [[ "${SHOWDATE}" == "yes" ]]; then
    NOW=$(date +".%Y%m%d-%H%M%S")
else
    NOW=""
fi

# Check for compression
if [[ "${COMPRESS}" == "yes" ]]; then
    EXTENSION=".gz"
else
    EXTENSION=""
fi

DUMP_FILE="${database}${NOW}.sql"

# Check if database dump exists
if [ -e ${DUMP_FILE} ]; then
    if [ "${OVERWRITE}" == "no" ]; then
        read -p "Database dump ${DUMP_FILE} already exists. Press Enter to overwrite, or Ctrl-C to abort."
    else
        rm -f "${DUMP_FILE}"
    fi
fi

showmessage "This is a Joomla! ${jversion} site. Starting database dump."

if mariadb-dump --skip-opt --extended-insert=FALSE --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host="${host}" --user="${dbuser}" --password="${password}" "${database}" > "${DUMP_FILE}"; then
    if [[ "${COMPRESS}" == "yes" ]]; then
        gzip "${DUMP_FILE}"
        showmessage "Database dump is ready in ${DUMP_FILE}.gz."
    else
        showmessage "Database dump is ready in ${DUMP_FILE}."
    fi
    exit 0
else
    showmessage "Error creating database dump."
    exit 1
fi