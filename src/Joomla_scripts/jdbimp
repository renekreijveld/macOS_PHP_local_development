#!/bin/bash

# jdbimp -- Import a sql file into a Joomla database.
# Supports Joomla versions 2.5 and up
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# Warning! This script needs the file jfunctions. This has to be installed in the same directory as this script.
#
# Version history
# 1.0 Initial version
# 1.1 Code rewrite
# 1.2 Modification of all echo -e statements
# 1.3 Added test if jfunctions exists
# 1.4 Code optimisations

# version
VERSION=1.4

# general variables
MYPATH=$(cd $(dirname ${0}); pwd -P)
MYNAME=$(basename ${0})

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo -e "$1"
    fi
}

# Check if jfunctions script exists
if [[ ! -f "${MYPATH}/jfunctions" ]]; then
    echo "Error: Required script 'jfunctions' not found in ${MYPATH}. Exiting."
    exit 1
else
    # Gather Joomla information
    source "${MYPATH}/jfunctions"
fi

# Display usage information
usage() {
    echo -e "${MYNAME} ${VERSION}, written by René Kreijveld.\n"
    echo -e "Usage: ${MYNAME} [-s] [-h]\n"
    echo "-s silent, no messages will be shown (optional)."
    echo -e "-h Help. Display this info.\n"
    echo -e "Run ${MYNAME} at the root of your website, where the configuration.php is.\n"
    exit 0
}

# Process the arguments
SILENT="no"
while getopts "sh" opt; do
    case "${opt}" in
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2;
        exit 1
        ;;
    esac
done

showmessage "${MYNAME} ${VERSION}"

# check if database dump exists.
if [ ! -e ${database}.sql ]; then
	echo "Database dump file not found. The filename should be ${database}.sql."
	exit 1
fi

showmessage "This is a Joomla! ${jversion} site. Starting database import of file ${database}.sql."

# import the database from a .sql file
if mariadb --user=${dbuser} --password=${password} ${database} < ${database}.sql
then
	showmessage "${database}.sql imported."
	exit 0
else
	echo "Error importing database dump."
	exit 1
fi