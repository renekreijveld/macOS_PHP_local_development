#!/bin/bash
# jbackup -- backup a Joomla website to a tar.gz file
#
# This scripts supports Joomla versions 1,0.
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# Warning! This script needs the file jfunctions. This has to be installed in the same directory as this script.
#
# Version history
# 1.0 Initial version
# 1.1 Added usage
# 1.2 Code rewrite and remove -e option in echos
# 1.3 Typo correction
# 1.4 Added test if jfunctions exists
# 1.5 Added improved tests if files already exist and added -t and -z options

# version
VERSION=1.5

# general variables
MYPATH=$(cd "$(dirname "$0")"; pwd -P)
MYNAME=$(basename "$0")

# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

# Check if jfunctions script exists
if [[ ! -f "${MYPATH}/jfunctions" ]]; then
    echo "Error: Required script 'jfunctions' not found in ${MYPATH}. Exiting."
    exit 1
else
    # Gather Joomla information
    source "${MYPATH}/jfunctions"
fi

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    SITESBACKUP="${PWD}"
fi   


# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo -e "$1"
    fi
}

# display usage information
usage() {
    echo -e "\n${MYNAME} ${VERSION}, written by René Kreijveld.\n"
    echo -e "Usage: ${MYNAME} [-z] [-t] [-o] [-s] [-h]\n"
    echo "Default action is .tgz backup."
    echo "-z Zip. Backup to a zipfile instead of a tgzfile."
    echo "-t Add a date/time-stamp to the backup file."
    echo "-o Overwrite existing backupfile and/or database dump."
    echo "-s silent, no messages will be shown (optional)."
    echo -e "-h Help. Display this info.\n"
    echo -e "Run ${MYNAME} at the root of your website, where the configuration.php is.\n"
    exit 0
}

ZIP="no"
SILENT="no"
OVERWRITE="no"
TIMESTAMP="no"
while getopts ztosh opt; do
    case "${opt}" in
    z)
        ZIP="yes"
        ;;
    t)
        TIMESTAMP="yes"
        ;;
    o)
        OVERWRITE="yes"
        ;;
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        ;;
    esac
done

# create date/time stamp
if [ "${TIMESTAMP}" == "yes" ]; then
    NOW=$(date +".%Y%m%d.%H%M%S")
else
    NOW=""
fi

showmessage "${MYNAME} ${VERSION}"

# Check if database dump exists
WEBSITE_FOLDER=$(basename "$PWD")
START_FOLDER=$(dirname "$PWD")

# Check if database dump exists
if [ -e ${database}.sql ]; then
    if [ "${OVERWRITE}" == "no" ]; then
        read -p "Database dump ${database}.sql already exists. Press Enter to overwrite, or Ctrl-C to abort."
    fi
fi

# Check if backup file exists
if [ "${ZIP}" == "no" ]; then
    BACKUPFILE="${SITESBACKUP}/${WEBSITE_FOLDER}${NOW}.tgz"
else
    BACKUPFILE="${SITESBACKUP}/${WEBSITE_FOLDER}${NOW}.zip"
fi
if [ -e ${BACKUPFILE} ]; then
    if [ "${OVERWRITE}" == "no" ]; then
        read -p "Backup ${BACKUPFILE} already exists. Press Enter to overwrite, or Ctrl-C to abort."
    fi
fi

showmessage "This is a Joomla! ${jversion} site. Starting backup."

showmessage "Create database dump."
jdbdump > /dev/null

showmessage "Create backup."

# Check if database dump exists
WEBSITE_FOLDER=$(basename "$PWD")
# Move one folder up
cd ${START_FOLDER}

# create the backup
if [ "${ZIP}" == "no" ]
then
    tar czf ${BACKUPFILE} ${WEBSITE_FOLDER}
else
    zip -q -r ${BACKUPFILE}  ${WEBSITE_FOLDER}
fi

cd ${WEBSITE_FOLDER}
# Cleanup database dump
rm -f ${database}.sql

showmessage "\nYour backup is ready at ${BACKUPFILE}.\n"
# create the backup
if [ "${ZIP}" == "no" ]
then
    showmessage "To restore the backup, use 'tar xzf ${BACKUPFILE}'.\nRun this command in folder ${START_FOLDER}."
else
    showmessage "To restore the backup, use 'unzip -q -o ${BACKUPFILE}'.\nRun this command in folder ${START_FOLDER}."
fi
