#!/bin/bash

# setsitephp - switch a site to another php version
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# Version history
# 1.0 Initial version
# 1.1 Added use of configuration file and support nginx and apache

# version
VERSION=1.1
# name of this
MYNAME=$(basename ${0})
# nginx folder for website configurations
NGINX_CONF_DIR=/opt/homebrew/etc/nginx/servers
# apache folder for website configurations
APACHE_CONF_DIR=/opt/homebrew/etc/httpd/vhosts
# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo -e "$1"
    fi
}

# display usage information
usage() {
    echo -e "${MYNAME} ${VERSION}, written by René Kreijveld.\n"
    echo -e "Usage: ${MYNAME} -n <website_name> -p <php_version> [-s] [-h]\n"
    echo "-n the name for the new website (without spaces)."
    echo "-p the PHP version for the website."
    echo "-s silent, no messages will be shown."
    echo -e "-h display this help.\n"
    exit 0
}

# Function to check if PHP version is valid
is_valid_php_version() {
    PHP_VERSION=$1
    if [ -d "/opt/homebrew/etc/php/${PHP_VERSION}" ]; then
        return 0
    else
        return 1
    fi
}

# Parse command line arguments
SILENT="no"
while getopts "n:p:sh" opt; do
    case ${opt} in
    n)
        WEBSITE_NAME=$OPTARG
        ;;
    p)
        PHP_VERSION=$OPTARG
        ;;
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        usage
        ;;
    esac
done

showmessage "${MYNAME} ${VERSION}"

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    echo "Error: configuration file ${CONFIG_FILE} not found, exiting."
    exit 1
fi   

# check if mandatory parameters are provided
if [ -z "${WEBSITE_NAME}" ] || [ -z "${PHP_VERSION}" ]; then
    echo "Error: -n, and -p are mandatory parameters."
    exit 1
fi

# check if the PHP version is valid
if ! is_valid_php_version "${PHP_VERSION}"; then
    echo "Error: PHP version ${PHP_VERSION} is not installed."
    echo "Installed PHP versions are:"
    ls /opt/homebrew/etc/php
    exit 1
fi

showmessage "Set website ${WEBSITE_NAME} PHP version to ${PHP_VERSION}."

# nginx and apache configuration files for website
NGINX_CONF_FILE=${NGINX_CONF_DIR}/${WEBSITE_NAME}.conf
APACHE_CONF_FILE=${APACHE_CONF_DIR}/${WEBSITE_NAME}.conf

# Reset all php versions in the nginx configuration file
sed -i '' "s/127.0.0.1:9074/<php_fpm_url>/g" ${NGINX_CONF_FILE}
sed -i '' "s/127.0.0.1:9074/<php_fpm_url>/g" ${APACHE_CONF_FILE}
sed -i '' "s/127.0.0.1:9081/<php_fpm_url>/g" ${NGINX_CONF_FILE}
sed -i '' "s/127.0.0.1:9081/<php_fpm_url>/g" ${APACHE_CONF_FILE}
sed -i '' "s/127.0.0.1:9082/<php_fpm_url>/g" ${NGINX_CONF_FILE}
sed -i '' "s/127.0.0.1:9082/<php_fpm_url>/g" ${APACHE_CONF_FILE}
sed -i '' "s/127.0.0.1:9083/<php_fpm_url>/g" ${NGINX_CONF_FILE}
sed -i '' "s/127.0.0.1:9083/<php_fpm_url>/g" ${APACHE_CONF_FILE}
sed -i '' "s/127.0.0.1:9084/<php_fpm_url>/g" ${NGINX_CONF_FILE}
sed -i '' "s/127.0.0.1:9084/<php_fpm_url>/g" ${APACHE_CONF_FILE}

# Set PHP FPM url based on PHP version
case ${PHP_VERSION} in
"7.4")
    PHP_FPM_URL="127.0.0.1:9074"
    ;;
"8.1")
    PHP_FPM_URL="127.0.0.1:9081"
    ;;
"8.2")
    PHP_FPM_URL="127.0.0.1:9082"
    ;;
"8.3")
    PHP_FPM_URL="127.0.0.1:9083"
    ;;
"8.4")
    PHP_FPM_URL="127.0.0.1:9084"
    ;;
esac

# Set PHP FPM url in the nginx configuration file
sed -i '' "s/<php_fpm_url>/${PHP_FPM_URL}/g" ${NGINX_CONF_FILE}
# Set PHP FPM url in the apache configuration file
sed -i '' "s/<php_fpm_url>/${PHP_FPM_URL}/g" ${APACHE_CONF_FILE}

if [ "${WEBSERVER}" == "apache" ]; then
    # Restart Apache
    showmessage "Restarting apache."
    /usr/local/bin/restartapache
fi

if [ "${WEBSERVER}" == "nginx" ]; then
    # Restart NginX
    showmessage "Restarting nginx."
    /usr/local/bin/restartnginx
fi
